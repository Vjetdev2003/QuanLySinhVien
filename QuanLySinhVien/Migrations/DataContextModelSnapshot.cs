// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLySinhVien.Data;

#nullable disable

namespace QuanLySinhVien.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLySinhVien.Models.DiemThi", b =>
                {
                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaSV")
                        .HasColumnType("int");

                    b.Property<double>("DiemLan1")
                        .HasColumnType("float");

                    b.Property<double>("DiemLan2")
                        .HasColumnType("float");

                    b.HasKey("MaMonHoc", "MaSV");

                    b.HasIndex("MaSV");

                    b.ToTable("DiemThi");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.Khoa", b =>
                {
                    b.Property<int>("MaKhoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhoa"));

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoa");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.KhoaLop", b =>
                {
                    b.Property<int>("MaKhoa")
                        .HasColumnType("int");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.HasKey("MaKhoa", "MaLop");

                    b.HasIndex("MaLop");

                    b.ToTable("KhoaLops");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.Lop", b =>
                {
                    b.Property<int>("MaLop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLop"));

                    b.Property<string>("HeDaoTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKhoa")
                        .HasColumnType("int");

                    b.Property<int>("NamNhapHoc")
                        .HasColumnType("int");

                    b.Property<int>("SiSo")
                        .HasColumnType("int");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLop");

                    b.HasIndex("MaKhoa");

                    b.ToTable("Lop");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.MonHoc", b =>
                {
                    b.Property<int>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMonHoc"));

                    b.Property<int>("SoDVHT")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonHoc");

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.SinhVien", b =>
                {
                    b.Property<int>("MaSV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSV"));

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoDem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiSinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSV");

                    b.HasIndex("MaLop");

                    b.ToTable("SinhViens");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.SinhVienLop", b =>
                {
                    b.Property<int>("MaSV")
                        .HasColumnType("int");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.HasKey("MaSV", "MaLop");

                    b.HasIndex("MaLop");

                    b.ToTable("SinhVienLops");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.DiemThi", b =>
                {
                    b.HasOne("QuanLySinhVien.Models.MonHoc", "MonHoc")
                        .WithMany("DiemThi")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuanLySinhVien.Models.SinhVien", "SinhVien")
                        .WithMany("DiemThi")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MonHoc");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.KhoaLop", b =>
                {
                    b.HasOne("QuanLySinhVien.Models.Khoa", "Khoa")
                        .WithMany("KhoaLops")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuanLySinhVien.Models.Lop", "Lop")
                        .WithMany("KhoaLops")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Khoa");

                    b.Navigation("Lop");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.Lop", b =>
                {
                    b.HasOne("QuanLySinhVien.Models.Khoa", "Khoa")
                        .WithMany("Lops")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.SinhVien", b =>
                {
                    b.HasOne("QuanLySinhVien.Models.Lop", "Lop")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lop");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.SinhVienLop", b =>
                {
                    b.HasOne("QuanLySinhVien.Models.Lop", "Lop")
                        .WithMany("SinhVienLops")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuanLySinhVien.Models.SinhVien", "SinhVien")
                        .WithMany("SinhVienLops")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lop");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.Khoa", b =>
                {
                    b.Navigation("KhoaLops");

                    b.Navigation("Lops");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.Lop", b =>
                {
                    b.Navigation("KhoaLops");

                    b.Navigation("SinhVienLops");

                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.MonHoc", b =>
                {
                    b.Navigation("DiemThi");
                });

            modelBuilder.Entity("QuanLySinhVien.Models.SinhVien", b =>
                {
                    b.Navigation("DiemThi");

                    b.Navigation("SinhVienLops");
                });
#pragma warning restore 612, 618
        }
    }
}
